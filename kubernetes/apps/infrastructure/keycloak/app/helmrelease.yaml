---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: keycloak
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.2.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s

  values:
    defaultPodOptions:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
      labels:
        ingress.samoth.eu/internal-ingress: allow
        egress.samoth.eu/dns: allow
        egress.samoth.eu/pg-infrastructure: allow

    controllers:
      keycloak:
        type: statefulset
        replicas: 2
        rollingUpdate:
          unavailable: 1
        containers:
          keycloak:
            image:
              repository: quay.io/keycloak/keycloak
              tag: 26.3.2
            args:
              - start
              - --db
              - postgres
            env:
              KC_BOOTSTRAP_ADMIN_USERNAME: "admin"
              KC_BOOTSTRAP_ADMIN_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: keycloak-admin-secret
                    key: password
              KC_DB_URL:
                valueFrom:
                  secretKeyRef:
                    name: postgres-infra-pguser-keycloak
                    key: jdbc-uri
              KC_HOSTNAME: https://keycloak.fern.samoth.eu
              KC_HOSTNAME_STRICT: "true"
              KC_HEALTH_ENABLED: "true"
              KC_HTTP_ENABLED: "true"
              # Traefik headers
              KC_PROXY_HEADERS: xforwarded
              # pod network
              KC_PROXY_TRUSTED_ADDRESSES: "10.69.0.0/16"
              JAVA_OPTS_APPEND: "-Djgroups.dns.query=keycloak-headless.infrastructure.svc.cluster.local"
            ports:
              - name: http
                containerPort: 8080
            probes:
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health/started
                    port: 9000
                  periodSeconds: 1
                  failureThreshold: 600
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health/ready
                    port: 9000
                  periodSeconds: 10
                  failureThreshold: 3
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health/live
                    port: 9000
                  periodSeconds: 10
                  failureThreshold: 3
            resources:
              requests:
                cpu: 10m
                memory: 666Mi
              limits:
                memory: 4096Mi

    service:
      keycloak:
        controller: keycloak
        ports:
          http:
            port: 80
            targetPort: 8080
      headless:
        controller: keycloak
        primary: false
        clusterIP: None
        ports:
          http:
            port: 80
            targetPort: 8080

    ingress:
      keycloak:
        hosts:
          - host: keycloak.fern.samoth.eu
            paths:
              - path: /
                service:
                  identifier: keycloak
                  port: http

    networkpolicies:
      # Allow Keycloak to communicate with himself
      keycloak:
        controller: keycloak
        policyTypes:
          - Ingress
          - Egress
        rules:
          ingress: &rule
            - from:
              - namespaceSelector:
                  matchLabels:
                    kubernetes.io/metadata.name: infrastructure
                podSelector:
                  matchLabels:
                    app.kubernetes.io/instance: keycloak
                    app.kubernetes.io/name: keycloak
          egress: *rule
